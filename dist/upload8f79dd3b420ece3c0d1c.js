/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/module.js":
/*!**********************!*\
  !*** ./js/module.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $$: () => (/* binding */ $$),\n/* harmony export */   checkSubs: () => (/* binding */ checkSubs),\n/* harmony export */   colorConcept: () => (/* binding */ colorConcept),\n/* harmony export */   createCircularLinkedList: () => (/* binding */ createCircularLinkedList),\n/* harmony export */   createQueue: () => (/* binding */ createQueue),\n/* harmony export */   getSecond: () => (/* binding */ getSecond),\n/* harmony export */   imageProcess: () => (/* binding */ imageProcess),\n/* harmony export */   owneraccount: () => (/* binding */ owneraccount),\n/* harmony export */   preventDefault: () => (/* binding */ preventDefault),\n/* harmony export */   switchScreen: () => (/* binding */ switchScreen),\n/* harmony export */   time: () => (/* binding */ time),\n/* harmony export */   update: () => (/* binding */ update)\n/* harmony export */ });\nfunction Transform(ele1, ele2, ele3) {\n    this.ele1 = ele1 // Main element\n    this.ele2 = ele2 // container\n    this.collided = false\n    this.deleted = true\n    this.x = 0\n    this.y = 0\n    this.angle = 0\n    this.w = 0\n    this.h = 0\n    const $ele2 = $(this.ele2)\n    const imgFrame = document.querySelector(this.ele2)\n    this.controllerClassName = this.ele1.substring(1) + '--controller'\n    const thisObject = this\n\n    const img = document.querySelector(this.ele1 + \" > img\")\n    let ratio = img.width / img.height\n\n    this.setRatio = function(r) {\n        ratio = r\n    }\n    \n    this.setValue = function(x, y, angle, w, h) {\n        this.x = (x !== undefined) ? x : this.x\n        this.y = (y !== undefined) ? y : this.y\n        this.angle = (angle !== undefined) ? angle : this.angle\n        this.w = (w !== undefined) ? w : this.w\n        this.h = (h !== undefined) ? h : this.h\n    }\n\n    this.exportData = function() {\n        return [this.x, this.y, this.angle, this.w, this.h]\n    }\n\n    this.isCollided = function() {\n        return this.collided\n    }\n\n    this.setIsCollided = function(is) {\n        this.collided = is\n    }\n\n    this.isDeleted = function() {\n        return this.deleted\n    }\n\n    this.setDeleted = function(is) {\n        this.deleted = is\n    }\n\n    this.css = `\n        ${this.ele1} {\n            position: absolute;\n            transform-origin: top left;\n            user-select: none;\n        }\n        ${this.ele1} > img {\n            object-fit: contain;\n            position: absolute;\n            top: 0;\n            left: 0;\n            display: block;\n            z-index: 1;\n            transform: translate(-50%, -50%)\n        }\n        .${this.controllerClassName}--container {\n            position: absolute;\n            transform-origin: top left;\n            user-select: none;\n        }\n        .${this.controllerClassName} {\n            position: absolute;\n            user-select: none;\n            border: solid 3px #6924d5;\n            z-index: 1;\n            top: 0;\n            left: 0;\n            transform: translate(-50%, -50%);\n        }\n        .${this.controllerClassName} .resize {\n            background-color: #fff;\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n            transition: all .1s linear;\n        }\n        .${this.controllerClassName} .resize.show {\n            background-color: #6924d5;\n        }\n        .${this.controllerClassName} .resize > .circle {\n            background-color: #f0f0f0a8;\n            position: absolute;\n            top: -15px;\n            left: -15px;\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n            z-index: -1;\n            visibility: hidden;\n            transition: all .1s linear;\n        }\n        .${this.controllerClassName} .resize > .circle.show {\n            visibility: visible;\n        }\n        .${this.controllerClassName} .resize.resize-topleft {\n            position: absolute;\n            top: -10px;\n            left: -10px;\n        }\n        .${this.controllerClassName} .resize.resize-topright {\n            position: absolute;\n            top: -10px;\n            right: -10px;\n        }\n        .${this.controllerClassName} .resize.resize-bottomleft {\n            position: absolute;\n            bottom: -10px;\n            left: -10px;\n        }\n        .${this.controllerClassName} .resize.resize-bottomright {\n            position: absolute;\n            bottom: -10px;\n            right: -10px;\n        }\n        .${this.controllerClassName} .rotate {\n            position: absolute;\n            top: -50px;\n            left: calc(50% - 15px);\n            width: 30px;\n            height: 30px;\n            background-color: #fff;\n            border-radius: 50%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .${this.controllerClassName} .delete {\n            position: absolute;\n            bottom: -50px;\n            left: calc(50% - 15px);\n            width: 30px;\n            height: 30px;\n            background-color: #fff;\n            border-radius: 50%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    `\n\n    this.controllerTemplate = `\n    <div class=\"${this.controllerClassName}--container\">\n    <div class=\"${this.controllerClassName}\">\n        <div class=\"dot resize resize-topleft\"><div class=\"circle\"></div></div>\n        <div class=\"dot resize resize-topright\"><div class=\"circle\"></div></div>\n        <div class=\"dot resize resize-bottomleft\"><div class=\"circle\"></div></div>\n        <div class=\"dot resize resize-bottomright\"><div class=\"circle\"></div></div>\n        <div class=\"dot rotate\"><i class=\"fa-solid fa-rotate\"></i></div>\n        <div class=\"dot delete\"><i class=\"fa-solid fa-trash\"></i></div>\n    </div>\n    </div>\n    `\n\n    this.addController = function() {\n        $ele2.after(this.controllerTemplate)\n        return this\n    }\n\n    this.addCSSForController = function() {\n        const styleElement = document.createElement('style')\n        styleElement.textContent = this.css\n        document.head.appendChild(styleElement)\n        return this\n    }\n\n    this.delete = function(cb) {\n        function handleDelete(e) {\n            e.preventDefault()\n            e.stopPropagation()\n            cb()\n            thisObject.setDeleted(true)\n        }\n        $(this.ele1 + \"--controller .delete\").on(\"touchstart\", e => handleDelete(e))\n        $(this.ele1 + \"--controller .delete\").on(\"mousedown\", e => handleDelete(e))\n        return this\n    }\n\n    this.repositionElement = function(x, y) {\n        const controllerWrapper = document.querySelector(this.ele1 + '--controller--container');\n        const boxWrapper = document.querySelector(this.ele1);\n\n        boxWrapper.style.left = x + 'px';\n        boxWrapper.style.top = y + 'px';\n        controllerWrapper.style.left = (x + imgFrame.offsetLeft + 3) + 'px';\n        controllerWrapper.style.top = (y + imgFrame.offsetTop + 3) + 'px';\n    }\n\n    this.resize = function(w, h) {\n        const controller = document.querySelector(this.ele1 + '--controller');\n        const img = document.querySelector(this.ele1 + \" > img\")\n\n        controller.style.width = w + 6 + 'px';\n        controller.style.height = h + 6 + 'px';\n        img.style.width = w + 'px';\n        // img.style.height = h + 'px';\n    }\n\n    this.rotateBox = function(deg) {\n        const controllerWrapper = document.querySelector(this.ele1 + '--controller--container');\n        const boxWrapper = document.querySelector(this.ele1);\n\n        boxWrapper.style.transform = `rotate(${deg}deg)`;\n        controllerWrapper.style.rotate = `${deg}deg`;\n        controllerWrapper.querySelector(\".delete\").style.rotate = `${-deg}deg`\n    }\n\n    this.transform = function() {\n        const controller = document.querySelector(this.ele1 + '--controller');\n        const controllerWrapper = document.querySelector(this.ele1 + '--controller--container');\n        const boxWrapper = document.querySelector(this.ele1);\n\n        const minWidth = 40;\n        const minHeight = 40;\n\n        var initX, initY, mousePressX, mousePressY, initW, initH, initRotate;\n\n        function getCurrentRotation(el) {\n            var st = window.getComputedStyle(el, null);\n            var tm = st.getPropertyValue(\"-webkit-transform\") ||\n                st.getPropertyValue(\"-moz-transform\") ||\n                st.getPropertyValue(\"-ms-transform\") ||\n                st.getPropertyValue(\"-o-transform\") ||\n                st.getPropertyValue(\"transform\")\n            \"none\";\n            if (tm != \"none\") {\n                var values = tm.split('(')[1].split(')')[0].split(',');\n                var angle = Math.round(Math.atan2(values[1], values[0]) * (180 / Math.PI));\n                return (angle < 0 ? angle + 360 : angle);\n            }\n            return 0;\n        }\n\n        function mousedownCb(event) {\n            event.target.classList.add(\"show\")\n            event.target.querySelector(\".circle\").classList.add(\"show\")\n        }\n        \n        function mouseupCb(event) {\n            event.target.classList.remove(\"show\")\n            event.target.querySelector(\".circle\").classList.remove(\"show\")\n        }\n\n        // drag support\n        function handleDrag(event, type) {\n            event.preventDefault()\n            event.stopPropagation()\n            initX = boxWrapper.offsetLeft;\n            initY = boxWrapper.offsetTop;\n            mousePressX = (type === 'desk') ? event.clientX : event.touches[0].clientX;\n            mousePressY = (type === 'desk') ? event.clientY : event.touches[0].clientY;\n            let [,,, w, h] = thisObject.exportData()\n    \n            function eventMoveHandler(event) {\n                let x = (type === 'desk') ? event.clientX : event.touches[0].clientX\n                let y = (type === 'desk') ? event.clientY : event.touches[0].clientY\n                var posX = initX + (x - mousePressX)\n                var posY = initY + (y - mousePressY)\n                thisObject.repositionElement(posX, posY);\n                thisObject.setValue(posX - w / 2, posY - h / 2, undefined, undefined, undefined)\n            }\n    \n            if(type === 'desk') {\n                controllerWrapper.addEventListener('mousemove', eventMoveHandler, false);\n                window.addEventListener('mouseup', function eventEndHandler() {\n                    controllerWrapper.removeEventListener('mousemove', eventMoveHandler, false);\n                    window.removeEventListener('mouseup', eventEndHandler);\n                }, false);\n            } else {\n                controllerWrapper.addEventListener('touchmove', eventMoveHandler, false);\n                window.addEventListener('touchend', function eventEndHandler() {\n                    controllerWrapper.removeEventListener('touchmove', eventMoveHandler, false);\n                    window.removeEventListener('touchend', eventEndHandler);\n                }, false);\n            }\n        }\n        controllerWrapper.addEventListener('mousedown', e => handleDrag(e, 'desk'), false);\n        controllerWrapper.addEventListener('touchstart', e => handleDrag(e, 'touch'), false);\n        // done drag support\n\n        // handle resize\n        // var rightMid = document.getElementById(\"right-mid\");\n        // var leftMid = document.getElementById(\"left-mid\");\n        // var topMid = document.getElementById(\"top-mid\");\n        // var bottomMid = document.getElementById(\"bottom-mid\");\n\n        var leftTop = document.querySelector(this.ele1 + \"--controller .resize-topleft\");\n        var rightTop = document.querySelector(this.ele1 + \"--controller .resize-topright\");\n        var rightBottom = document.querySelector(this.ele1 + \"--controller .resize-bottomright\");\n        var leftBottom = document.querySelector(this.ele1 + \"--controller .resize-bottomleft\");\n\n        function resizeHandler(event, left = false, top = false, xResize = false, yResize = false, type) {\n            event.preventDefault()\n            event.stopPropagation()\n            initX = boxWrapper.offsetLeft;\n            initY = boxWrapper.offsetTop;\n            mousePressX = (type === 'desk') ? event.clientX : event.touches[0].clientX;\n            mousePressY = (type === 'desk') ? event.clientY : event.touches[0].clientY;\n\n            initW = img.offsetWidth;\n            initH = img.offsetHeight;\n\n            initRotate = getCurrentRotation(boxWrapper);\n            \n            var initRadians = initRotate * Math.PI / 180;\n            var cosFraction = Math.cos(initRadians);\n            var sinFraction = Math.sin(initRadians);\n            mousedownCb(event)\n            var vectorC = [mousePressX - initX - imgFrame.offsetLeft, mousePressY - initY - imgFrame.offsetTop]\n            function eventMoveHandler(event) {\n                var x = ((type === 'desk') ? event.clientX : event.touches[0].clientX)\n                var y = ((type === 'desk') ? event.clientY : event.touches[0].clientY)\n                var wDiff = x - mousePressX\n                var hDiff = y - mousePressY\n                var vectorD = [wDiff, hDiff]\n                const c = (vectorC[0] * vectorD[0] + vectorC[1] * vectorD[1]) / (vectorC[0] * vectorC[0] + vectorC[1] * vectorC[1])\n                var vectorH = [c * vectorC[0], c * vectorC[1]]\n                // var rotatedWDiff = cosFraction * wDiff + sinFraction * hDiff;\n                // var rotatedHDiff = cosFraction * hDiff - sinFraction * wDiff;\n                var rotatedWDiff = cosFraction * vectorH[0] + sinFraction * vectorH[1];\n                var rotatedHDiff = cosFraction * vectorH[1] - sinFraction * vectorH[0];\n                rotatedHDiff = (rotatedHDiff*rotatedWDiff > 0) ? (rotatedWDiff / ratio) : (- rotatedWDiff / ratio);\n\n                var newW = initW, newH = initH, newX = initX, newY = initY;\n\n                if (xResize) {\n                    if (left) {\n                        newW = initW - rotatedWDiff;\n                        if (newW < minWidth) {\n                        newW = minWidth;\n                        rotatedWDiff = initW - minWidth;\n                        }\n                    } else {\n                        newW = initW + rotatedWDiff;\n                        if (newW < minWidth) {\n                        newW = minWidth;\n                        rotatedWDiff = minWidth - initW;\n                        }\n                    }\n                    newX += 0.5 * rotatedWDiff * cosFraction;\n                    newY += 0.5 * rotatedWDiff * sinFraction;\n                }\n\n                if (yResize) {\n                    if (top) {\n                        newH = initH - rotatedHDiff;\n                        if (newH < minHeight) {\n                        newH = minHeight;\n                        rotatedHDiff = initH - minHeight;\n                        }\n                    } else {\n                        newH = initH + rotatedHDiff;\n                        if (newH < minHeight) {\n                        newH = minHeight;\n                        rotatedHDiff = minHeight - initH;\n                        }\n                    }\n                    newX -= 0.5 * rotatedHDiff * sinFraction;\n                    newY += 0.5 * rotatedHDiff * cosFraction;\n                }\n\n                thisObject.resize(newW, newH);\n                thisObject.repositionElement(newX, newY);\n                thisObject.setValue(newX - newW / 2, newY - newH / 2, undefined, newW, newH)\n            }\n\n            if(type === 'desk') {\n                window.addEventListener('mousemove', eventMoveHandler, false);\n                window.addEventListener('mouseup', function eventEndHandler() {\n                    mouseupCb(event)\n                    window.removeEventListener('mousemove', eventMoveHandler, false);\n                    window.removeEventListener('mouseup', eventEndHandler);\n                }, false);\n            } else {\n                window.addEventListener('touchmove', eventMoveHandler, false);\n                window.addEventListener('touchend', function eventEndHandler() {\n                    mouseupCb(event)\n                    window.removeEventListener('touchmove', eventMoveHandler, false);\n                    window.removeEventListener('touchend', eventEndHandler);\n                }, false);\n            }\n        }\n\n\n        // rightMid.addEventListener('mousedown', e => resizeHandler(e, false, false, true, false));\n        // leftMid.addEventListener('mousedown', e => resizeHandler(e, true, false, true, false));\n        // topMid.addEventListener('mousedown', e => resizeHandler(e, false, true, false, true));\n        // bottomMid.addEventListener('mousedown', e => resizeHandler(e, false, false, false, true));\n        leftTop.addEventListener('mousedown', e => resizeHandler(e, true, true, true, true, 'desk'));\n        rightTop.addEventListener('mousedown', e => resizeHandler(e, false, true, true, true, 'desk'));\n        rightBottom.addEventListener('mousedown', e => resizeHandler(e, false, false, true, true, 'desk'));\n        leftBottom.addEventListener('mousedown', e => resizeHandler(e, true, false, true, true, 'desk'));\n\n        leftTop.addEventListener('touchstart', e => resizeHandler(e, true, true, true, true, 'touch'));\n        rightTop.addEventListener('touchstart', e => resizeHandler(e, false, true, true, true, 'touch'));\n        rightBottom.addEventListener('touchstart', e => resizeHandler(e, false, false, true, true, 'touch'));\n        leftBottom.addEventListener('touchstart', e => resizeHandler(e, true, false, true, true, 'touch'));\n\n        // handle rotation\n        var rotate = document.querySelector(thisObject.ele1 + \"--controller .rotate\");\n        function handleRotate(event, type) {\n            event.preventDefault()\n            event.stopPropagation()\n    \n            initX = event.target.offsetLeft;\n            initY = event.target.offsetTop;\n            mousePressX = (type === 'desk') ? event.clientX : event.touches[0].clientX;\n            mousePressY = (type === 'desk') ? event.clientY : event.touches[0].clientY;\n    \n    \n            var arrow = document.querySelector(thisObject.ele1 + '--controller');\n            var arrowRects = arrow.getBoundingClientRect();\n            var arrowX = arrowRects.left + arrowRects.width / 2;\n            var arrowY = arrowRects.top + arrowRects.height / 2;\n    \n            function eventMoveHandler(event) {\n                let x = (type === 'desk') ? event.clientX : event.touches[0].clientX\n                let y = (type === 'desk') ? event.clientY : event.touches[0].clientY\n                var angle = Math.atan2(y - arrowY, x - arrowX) + Math.PI / 2;\n                angle *= 180 / Math.PI\n                thisObject.rotateBox(angle);\n                thisObject.setValue(undefined, undefined, angle, undefined, undefined)\n            }\n            if(type === 'desk') {\n                window.addEventListener('mousemove', eventMoveHandler, false);\n    \n                window.addEventListener('mouseup', function eventEndHandler() {\n                    window.removeEventListener('mousemove', eventMoveHandler, false);\n                    window.removeEventListener('mouseup', eventEndHandler);\n                }, false);\n            } else {\n                window.addEventListener('touchmove', eventMoveHandler, false);\n    \n                window.addEventListener('touchend', function eventEndHandler() {\n                    window.removeEventListener('touchmove', eventMoveHandler, false);\n                    window.removeEventListener('touchend', eventEndHandler);\n                }, false);\n            }\n        }\n        rotate.addEventListener('mousedown', e => handleRotate(e, 'desk'), false);\n        rotate.addEventListener('touchstart', e => handleRotate(e, 'touch'), false);\n\n        thisObject.resize(200, 200 / ratio);\n        thisObject.repositionElement(100, 100 / ratio);\n        thisObject.setValue(0, 0, 0, 200, 200 / ratio)\n        return this\n    }\n}\n\nfunction $$(ele1, ele2, ele3, ele4) {\n    if(arguments.length === 3) {\n        return new Transform(ele1, ele2, ele3)\n    }\n}\n\nfunction update() {\n    const evtSource = new EventSource('/data/update.php')\n    evtSource.onopen = function() {\n       console.log('Connection to server opened.')\n    }\n    evtSource.onerror = function() {\n       console.log('EventSource failed.')\n    }\n    evtSource.onmessage = function(event) {\n        let signal = JSON.parse(event.data)\n        if(signal != null) {\n            if(signal.isupdate == 'true') {\n                $.post(\"/admin/data/updateTech.php\")\n                if(confirm(\"Reload to see changes\")) {\n                    location.reload();\n                }\n            }\n        }\n    }\n}\n\nfunction checkSubs(isPage) {\n    $.ajax({\n        url: \"/data/checkSubs.php\",\n        method: \"GET\",\n        dataType: \"json\",\n        success: function(e) {\n            if(isPage) {\n                pageToTerminate(e.subs)\n            } else {\n                terminateToPage(e.subs)\n            }\n        }\n    })\n    function pageToTerminate(when) {\n        const d = new Date();\n        const expiration = new Date(formattingDate(when))\n        if(d.getTime() >= expiration.getTime()) {\n            window.location = \"/subsTerminated\";\n        }\n    }\n    function terminateToPage(when) {\n        const d = new Date();\n        const expiration = new Date(formattingDate(when))\n        if(d.getTime() < expiration.getTime() || when === null) {\n            window.location = \"/\";\n        }\n    }\n    function formattingDate(date) {\n        return date + \" 00:00:00\";\n    }\n}\n\nfunction colorConcept() {\n    $.get(\"/data/colorConcept.php\", function(e) {\n        document.querySelector(\":root\").style.setProperty(\"--main-color\", `${e}`);\n    })\n}\n\nfunction preventDefault() {\n    window.onload = function () {\n        document.addEventListener(\"contextmenu\", e => {\n            e.preventDefault();\n        })\n        document.onkeydown = function(e) {\n            if (e.ctrlKey || e.metaKey ) {\n                return false;\n            }\n        }\n    }\n}\n\nfunction ToggleButton(edit, del, no) {\n    this.edit = edit\n    this.del = del\n    this.no = no\n    $edit = $(this.edit)\n    $delete = $(this.del)\n    $no = $(this.no)\n\n    this.toggle = function() {\n        $edit.click(event => {\n            event.preventDefault();\n            $(event.currentTarget).parent().next().slideToggle('fast');\n        });\n    \n        $delete.click( function(event){\n            event.preventDefault();\n            $(event.currentTarget).parent().next().next().slideToggle('fast');\n            var offsetTop = $(this).offset().top;\n            $('html, body').animate({\n                scrollTop: offsetTop\n            })\n        });\n        \n        $no.click(event=>{\n            event.preventDefault();\n            $(event.currentTarget).parent().parent().slideUp('fast');\n        });\n    }\n}\n\nfunction ImageProcess() {\n    this.fileHandling = function(e, cb) {\n        const {target} = e\n        const file = target.files[0]\n        if(file) {\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.onload = function(readerEvent) {\n                const imgElement = document.createElement(\"img\")\n                imgElement.src = readerEvent.target.result\n                imgElement.onload = function(imgEvent) {\n                    cb(imgEvent.target.src)\n                }\n            }\n        }\n    }\n\n    this.createCanvas = function(width, height) {\n        const canvas = document.createElement(\"canvas\")\n        const ctx = canvas.getContext(\"2d\")\n        canvas.width = width\n        canvas.height = height\n        return [canvas, ctx]\n    }\n    \n    this.drawImage = function(e, ctx, x, y, scale, angle, canvas, containerWidth, containerHeight) {\n        const ratioX = canvas.width/containerWidth\n        const ratioY = canvas.height/containerHeight\n        let finalX = x*ratioX\n        let finalY = y*ratioY\n        let midleWidth = e.width*ratioX\n        let midleHeight = e.height*ratioY\n        let finalWidth = e.width*ratioX*scale\n        let finalHeight = e.height*ratioY*scale\n\n        ctx.save()\n        ctx.translate(finalX + midleWidth/2, finalY + midleHeight/2)\n        ctx.rotate((angle*Math.PI)/180)\n        ctx.drawImage(e, -finalWidth/2, -finalHeight/2, finalWidth, finalHeight);\n        ctx.restore()\n        const srcEncoded = ctx.canvas.toDataURL(e).split(\",\")[1]\n        return [ctx, srcEncoded]\n    }\n\n    this.drawColor = function(type, color, ctx, width, ratio) {\n        if(type === \"\") color = \"#ffffff\"\n        if(type === \"gradient\") {\n            const breakdownArr = color.split(\",\")\n            var [angle, color1, percent1, color2, percent2] = [breakdownArr[0], breakdownArr[1], breakdownArr[2], breakdownArr[3], breakdownArr[4]]\n            const radians = (angle - 180) * Math.PI / 180\n            const x0 = width / 2 + (width / 2) * Math.cos(radians - Math.PI / 2);\n            const y0 = width*ratio / 2 + (width*ratio / 2) * Math.sin(radians - Math.PI / 2);\n            const x1 = width / 2 - (width / 2) * Math.cos(radians - Math.PI / 2);\n            const y1 = width*ratio / 2 - (width*ratio / 2) * Math.sin(radians - Math.PI / 2);\n            const gradient = ctx.createLinearGradient(x0, y0, x1, y1)\n            gradient.addColorStop(percent1/100, color1)\n            gradient.addColorStop(percent2/100, color2)\n            ctx.fillStyle = gradient\n            ctx.fillRect(0, 0, width, width * ratio)\n            const srcEncoded = ctx.canvas.toDataURL().split(\",\")[1]\n            return [ctx, srcEncoded]\n        } else {\n            ctx.fillStyle = color\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n            const srcEncoded = ctx.canvas.toDataURL().split(\",\")[1]\n            return [ctx, srcEncoded]\n        }\n    }\n}\n\nfunction toggleButton(edit, del, no) {\n    return new ToggleButton(edit, del, no)\n}\n\nfunction imageProcess() {\n    return new ImageProcess()\n}\n\nfunction owneraccount(){\n    var $display = $(\".owner_box--block .display\").children();\n    $(\".owner_box [name='setOwner']\").click(event=>{\n        event.preventDefault();\n        var $username_box = $(\".owner_box [name='owner']\");\n        var $password_box = $(\".owner_box [name='password']\");\n        var $re_password_box = $(\".owner_box [name='re_password']\");\n        var username = $username_box.val();\n        var password = $password_box.val();\n        var re_password = $re_password_box.val();\n        if (username === '' && password === '') {\n            $(\".owner_box\").children().first().empty();\n            $(\".owner_box\").children().first().append('<p class=\"alert\">Please enter Username and Password</p>');\n            $username_box.addClass(\"errorFocusActive\");\n            $password_box.addClass(\"errorFocusActive\");\n            $re_password_box.addClass(\"errorFocusActive\");\n        } else if (username != '' && password === '') {\n            $(\".owner_box\").children().first().empty();\n            $(\".owner_box\").children().first().append('<p class=\"alert\">Please enter Password</p>');\n            $username_box.removeClass(\"errorFocusActive\");\n            $password_box.removeClass(\"errorFocusActive\");\n            $re_password_box.removeClass(\"errorFocusActive\");\n            $password_box.addClass(\"errorFocusActive\");\n            $re_password_box.addClass(\"errorFocusActive\");\n        } else if (username === '' && password != '') {\n            $(\".owner_box\").children().first().empty();\n            $(\".owner_box\").children().first().append('<p class=\"alert\">Please enter Username</p>');\n            $username_box.removeClass(\"errorFocusActive\");\n            $password_box.removeClass(\"errorFocusActive\");\n            $re_password_box.removeClass(\"errorFocusActive\");\n            $username_box.addClass(\"errorFocusActive\");\n        } else if (username != '' && password != '' && re_password === '') {\n            $(\".owner_box\").children().first().empty();\n            $(\".owner_box\").children().first().append('<p class=\"alert\">Please re-enter your password</p>');\n            $username_box.removeClass(\"errorFocusActive\");\n            $password_box.removeClass(\"errorFocusActive\");\n            $re_password_box.removeClass(\"errorFocusActive\");\n            $re_password_box.addClass(\"errorFocusActive\");\n        }\n        else {\n            if (re_password === password){\n                $.post(\"/data/setOwner.php\", {\n                    username: username,\n                    password: password\n                });\n                $(\".owner_box\").children().first().empty();\n                $(\".owner_box\").children().first().append('<p class=\"alert\">Owner Account has been set successfully</p>');\n                $username_box.removeClass(\"errorFocusActive\");\n                $password_box.removeClass(\"errorFocusActive\");\n                $re_password_box.removeClass(\"errorFocusActive\");\n                $display.eq(2).html(username);\n                $display.eq(4).html(password);\n            } else {\n                $(\".owner_box\").children().first().empty();\n                $(\".owner_box\").children().first().append('<p class=\"alert\">Your password is not matched</p>');\n                $username_box.removeClass(\"errorFocusActive\");\n                $password_box.removeClass(\"errorFocusActive\");\n                $re_password_box.removeClass(\"errorFocusActive\");\n                $password_box.addClass(\"errorFocusActive\");\n                $re_password_box.addClass(\"errorFocusActive\");\n            }\n        }\n    });\n    $.getJSON(\"/data/setOwner.php\", function(e) {\n        $display.eq(2).html(e[0].owner);\n        $display.eq(4).html(e[0].password);\n    });\n    // Hide and Show Password\n    let $pw = $(\".owner_box--block .set [name='password'], .owner_box--block .set [name='re_password']\");\n    let $eye = $(\".owner_box--block .set i\");\n    $eye.click(()=>{\n        if ($pw.attr('type') == \"password\") {\n            $pw.attr('type','text');\n            $eye.removeClass(\"active\");\n        } else {\n            $pw.attr('type','password');\n            $eye.addClass(\"active\");\n        }\n    })\n}\n\nfunction time() {\n    $(\"button[name='timeBtn']\").click(e => {\n        e.preventDefault();\n        let $fetchTimeBox = $(\".time-interval p span\")\n        let time = Number($(\"input[name='timeInterval']\").val());\n        if(Number.isInteger(time) && time > 0) {\n            $.post(\"/data/time.php\", {\n                req: time\n            }, function() {\n                $fetchTimeBox.html(time)\n            })\n        } else {\n            $fetchTimeBox.html(\"an error\")\n        }\n    })\n}\n\nfunction CircularLinkedList() {\n    // Function to create Node\n    let Node = function(data) {\n        this.data = data;\n        this.next = null;\n    }\n\n    // Below is private properties\n    let length = 0;\n    let head = null;\n    let stop = false;\n    let current;\n\n    // Set stop property\n    this.setStop = function(is) {\n        stop = is\n    }\n\n    // Get stop property\n    this.getStop = function() {\n        return stop\n    }\n\n    // Set current Node\n    this.setCurrentNode = function(Node) {\n        current = Node\n    }\n\n    // Get current Node\n    this.getCurrentNode = function() {\n        return current\n    }\n\n    // Get element at specific index\n    this.getElementAt = function(index) {\n        if(index >= 0 && index <= length) {\n            let node = head;\n            for(let i = 0; i < index && node != null; i++) {\n                node = node.next;\n            }\n            return node;\n        }\n        return undefined;\n    }\n\n    // Get element at specific filename\n    this.getElementWith = function(filename) {\n        if(filename) {\n            let current = head\n            for(let i = 0; i < this.length(); i++) {\n                if(current.data.filename === filename) {\n                    return current\n                } else {\n                    current = current.next\n                }\n            }\n            return undefined\n        }\n        return undefined\n    }\n\n    // Add new Node to the list - add to the last\n    this.add = function(data) {\n        const node = new Node(data);\n        let current;\n\n        if(head === null) {\n            head = node;\n        } else {\n            current = this.getElementAt(length - 1);\n            current.next = node;\n        }\n\n        node.next = head; // This is how a circular linked list is formed because the last node points to the head\n        length++;\n    }\n\n    // Insert new Node to the list\n    this.insert = function(data, index) {\n        if (index >= 0 && index <= length) {\n            const node = new Node(data)\n            let current = head\n\n            if(index === 0) {\n                if(head === null) {\n                    head = node\n                    node.next = head \n                } else {\n                    node.next = head\n                    current = this.getElementAt(length)\n                    head = node\n                    current.next = head\n                }\n            } else {\n                const previous = this.getElementAt(index - 1)\n                node.next = previous.next\n                previous.next = node\n            }\n\n            length++\n            return true\n        }\n        return false\n    }\n\n    // Remove element at any position\n    this.removeAt = function(index) {\n        if(index >= 0 && index <= length) {\n            let current = head\n\n            if(index === 0) {\n                if(length === 1) {\n                    head = null\n                } else {\n                    const removed = head\n                    current = this.getElementAt(length - 1)\n                    head = head.next\n                    current.next = head\n                    current = removed // You want to return what node was removed\n                }\n            } else {\n                const previous = this.getElementAt(index - 1)\n                current = previous.next\n                previous.next = current.next\n            }\n\n            length--\n            return current.data\n        }\n        return undefined\n    }\n\n    // Remove element having a specific data\n    this.removeName = function(itemName) {\n        let current = head, index = 0\n        if(length === 1) {\n            head = null\n            length--\n        } else {\n            while(true) {\n                let name = current.data.filename\n                if(name === itemName) {\n                    break\n                } else {\n                    current = current.next\n                    index++\n                    if(index === length - 1) {\n                        break\n                    }\n                }\n            }\n            this.removeAt(index)\n        }\n    }\n\n    // Get length of the linked list\n    this.length = function() {\n        return length\n    }\n\n    // Get the head node, this is the same as getting the node with index 0\n    this.headNode = function() {\n        return head\n    }\n    \n    this.removeAll = function() {\n        length = 0\n        head = null\n    }\n}\n\nfunction createCircularLinkedList() {\n    return new CircularLinkedList()\n}\n\nfunction Queue() {\n    this.current = 0\n    this.store = {}\n    // Add data to current index\n    this.add = function(data) {\n        this.current++\n        this.store[this.current] = data\n    }\n    // Return data at specified index\n    this.get = function(index) {\n        return this.store[index]\n    }\n    // Modify data at specified index\n    this.modify = function(index, data) {\n        this.store[index] = data\n    }\n    // Remove data at specified index\n    this.remove = function(index) {\n        delete this.store[index]\n    }\n    // Get current index\n    this.getCurrentIndex = function() {\n        return this.current\n    }\n}\n\nfunction createQueue() {\n    return new Queue()\n}\n\nfunction switchScreen() {\n    if ($(window).width() > 510) {\n        window.location = \"/tv\";\n    }\n}\n\nfunction getSecond() {\n    const obj = new Date()\n    return obj.getTime()\n}\n\n\n\n//# sourceURL=webpack://htdocs/./js/module.js?");

/***/ }),

/***/ "./js/upload.js":
/*!**********************!*\
  !*** ./js/upload.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module.js */ \"./js/module.js\");\nconst uploadingArea = document.getElementById(\"uploadingArea\")\nconst fileInputTv = document.querySelector(\"#tvinpFile\")\nconst bar = document.querySelector(\"#uploadingArea progress\")\nconst progressLabel = document.querySelector(\"#uploadingArea label\")\nconst signatureInput = document.querySelector(\"#preview .preview__btnArea input\")\nconst previewImg = document.querySelector(\"#preview .preview__imgArea--img\")\nconst previewSignature = document.querySelector(\"#preview .preview__signatureArea--img\")\nconst background = document.querySelector(\".background-preview\")\nconst previewFrame = document.querySelector('#preview .preview__imgArea')\n;\n\n// SHOW FORM\ndocument.querySelector(\".submit_box form\").onclick = function() {\n    document.querySelector(\"#tvinpFile\").click();\n}\n$(\"#preview .preview__btn--add\").click(function() {\n    $(this).next().click()\n})\n$(\"#preview .preview__btn--cancel\").click(function() {\n    location.reload()\n}\n)\n\nconst imgProcess = (0,_module_js__WEBPACK_IMPORTED_MODULE_0__.imageProcess)()\n\nfileInputTv.onchange = (e) => {\n    let file = e.target.files[0];\n    if(file) {\n        const name = file.name\n        const ext = name.split(\".\")[1]\n        if (ext.toLowerCase() === 'mp4' || ext.toLowerCase() === 'mov' || ext.toLowerCase() === 'avi') {\n            var URL = window.URL || window.webkitURL\n            var video = document.createElement(\"video\")\n            var fileURL = URL.createObjectURL(file)\n            video.src = fileURL\n            video.addEventListener(\"loadeddata\", function() {\n                let duration = video.duration\n                if(duration > maxVideoDuration) {\n                    alert(\"Your video should be less than \" + maxVideoDuration + \" seconds\")\n                } else {\n                    uploadingArea.classList.add(\"active\");\n                    uploadFileTv(file, 'mp4', 'video', duration)\n                }\n            })\n        } else {\n            imgProcess.fileHandling(e, function(src) {\n                const obj = {}\n                $(\"#preview\").css(\"display\", \"flex\")\n                $(\"body\").css({\n                    overflow: 'hidden',\n                    touchAction: 'none'\n                })\n                previewImg.src = src\n                obj.previewImg = (0,_module_js__WEBPACK_IMPORTED_MODULE_0__.$$)(\".preview__imgArea--wrapper\", \".preview__imgArea\", undefined).addController().addCSSForController().transform().delete(function() {\n                    $(\".preview__imgArea--wrapper\").hide()\n                    $(\".preview__imgArea--wrapper--controller--container\").hide()\n                })\n                obj.previewImg.setDeleted(false)\n\n                obj.previewSignature = (0,_module_js__WEBPACK_IMPORTED_MODULE_0__.$$)(\".preview__signatureArea--wrapper\", \".preview__imgArea\", undefined).addController().addCSSForController().transform().delete(function() {\n                    $(\".preview__signatureArea--wrapper\").hide()\n                    $(\".preview__signatureArea--wrapper--controller--container\").hide()\n                })\n                obj.previewSignature.setDeleted(true)\n\n                signatureInput.onchange = (e) => {\n                    const file = e.target.files[0]\n                    if(file) {\n                        imgProcess.fileHandling(e, function(src) {\n                            previewSignature.src = src\n                            let ratio = previewSignature.width / previewSignature.height\n                            obj.previewSignature.setDeleted(false)\n                            obj.previewSignature.resize(200, 200 / ratio)\n                            obj.previewSignature.repositionElement(100, 100 / ratio)\n                            obj.previewSignature.rotateBox(0)\n                            obj.previewSignature.setRatio(ratio)\n                            obj.previewSignature.setValue(0, 0, 0, 200, 200 / ratio)\n                            $(\".preview__signatureArea--wrapper\").show()\n                            $(\".preview__signatureArea--wrapper--controller--container\").show()\n                        })\n                    }\n                }\n                $(\"#preview .preview__btn--upload\").click(function() {\n                    // Get outer image dimensions\n                    const [imgX, imgY, imgAngle] = obj.previewImg.exportData()\n\n                    // Get signature dimensions\n                    const [sX, sY, sAngle] = obj.previewSignature.exportData()\n\n                    // create canvas\n                    const ratio = 16/9\n                    const width = 1200\n                    var [canvas, ctx] = imgProcess.createCanvas(width, ratio*width)\n                    \n                    // Get color or gradient color\n                    const typeOfBackground = background.getAttribute(\"data-type\")\n                    const valueOfBackground = background.getAttribute(\"data-color\")\n                    let [ctxReturned, srcEncoded] = imgProcess.drawColor(typeOfBackground, valueOfBackground, ctx, width, ratio)\n\n                    // Draw image if it is not deleted\n                    if(!obj.previewImg.isDeleted()) {\n                        // draw outer image on canvas\n                        [ctxReturned, srcEncoded] = imgProcess.drawImage(previewImg, ctxReturned, imgX, imgY, 1, imgAngle, canvas, $(\".preview__imgArea\").width(), $(\".preview__imgArea\").height())\n                    }\n\n                    // Draw signature if it is not deleted\n                    if(!obj.previewSignature.isDeleted()) {\n                        [ctxReturned ,srcEncoded] = imgProcess.drawImage(previewSignature, ctxReturned, sX, sY, 1, sAngle, canvas, $(\".preview__imgArea\").width(), $(\".preview__imgArea\").height())\n                    }\n\n                    uploadFileTv(srcEncoded, 'jpg', 'image', undefined)\n                    $(\"#preview\").hide()\n                    uploadingArea.classList.add(\"active\")\n                })\n            })\n        }\n    }\n}\nfunction uploadFileTv(src, ext, type, duration) {\n    let d = new Date()\n    let uploadDataConfig = {\n        filename: d.getTime() + \".\" + ext,\n        body: src,\n        duration: duration,\n        ImgContentType: 'application/json',\n        VideoContentType: false,\n        ImgUrl: '/data/imgupload.php',\n        VideoUrl: '/data/videoupload.php'\n    }\n    let data, contentType, url\n    if(type === 'image') {\n        url = uploadDataConfig.ImgUrl\n        data = JSON.stringify({\n            body: uploadDataConfig.body,\n            name: uploadDataConfig.filename\n        })\n        contentType = uploadDataConfig.ImgContentType\n    } else {\n        url = uploadDataConfig.VideoUrl\n        const formData = new FormData();\n        formData.append(\"tvinpFile\", uploadDataConfig.body)\n        formData.append(\"duration\", Math.floor(uploadDataConfig.duration)+1)\n        formData.append(\"filename\", uploadDataConfig.filename)\n        data = formData\n        contentType = uploadDataConfig.VideoContentType\n    }\n    $.ajax({\n        url: url,\n        method: \"POST\",\n        data: data,\n        contentType: contentType,\n        processData: false,\n        xhr: function() {\n            var xhr = $.ajaxSettings.xhr()\n            xhr.upload.onprogress = function(e) {\n                if(e.lengthComputable) {\n                    let fileLoaded = Math.floor((e.loaded/e.total)*100);\n                    bar.value = fileLoaded; \n                    if (e.loaded == e.total) {\n                        bar.style.display = \"none\";\n                        progressLabel.innerHTML = `<p>Loading...<p></br>`;\n                    } else {\n                        progressLabel.innerHTML = `<p>Please wait</p></br><p>${fileLoaded} %</p></br>`;\n                    }\n                }\n\n            }\n            return xhr\n        },\n        success: function() {\n            location.reload()\n        }\n    })\n}\n\nfunction reachMultiImgMax() {\n    if(currentImg === multiImgMax) {\n        $(\".submit_box .submit_box--tv\").hide();\n        $(\".submit_box .reachMessage\").css(\"display\", \"flex\");\n    }\n}\nreachMultiImgMax();\n\n//# sourceURL=webpack://htdocs/./js/upload.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/upload.js");
/******/ 	
/******/ })()
;